<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <context:component-scan base-package="com.springbook.biz"></context:component-scan>
    
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <context:property-placeholder location="classpath:config/database.propeties"/>
    
    <!-- DataSource설정 -->
    <bean id = "dataSource" class = "org.apache.commons.dbcp.BasicDataSource" destroy-method = "close">
        <property name = "driverClassName" value = "${jdbc.driver}" />
        <property name = "url" value = "${jdbc.url}" />
        <property name = "username" value = "${jdbc.username}" />
        <property name = "password" value = "${jdbc.password}" />
        <property name = "maxActive" value = "8" />
        <property name = "maxIdle" value = "8" />    
    </bean>
    
    <bean id = "jdbcTemplate" class = "org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref = "dataSource"></property>
    </bean>
    
    <bean id = "sessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref = "dataSource"></property>
        <property name="configLocation" value = "classpath:sql-map-config.xml" />
    </bean>
    
    <bean class = "org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref = "sessionFactory"></constructor-arg>
    </bean>
    
    <bean id = "txManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref = "dataSource"></property>
    </bean>
    
    <tx:advice id = "txAdvice" transaction-manager = "txManager">
        <tx:attributes>
            <tx:method name="get*" read-only = "true"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="boardPointcut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="boardPointcut"/>
    </aop:config>
    
    <!-- <bean id = "before" class = "com.springbook.biz.common.BeforeAdvice"></bean> -->
    <!-- <bean id = "afterThrowing" class = "com.springbook.biz.common.AfterThrowingAdvice"></bean>
    <bean id = "after" class = "com.springbook.biz.common.AfterAdvice"></bean> -->
    <!-- <bean id = "around" class = "com.springbook.biz.common.AroundAdvice"></bean>
    
    <aop:config>
        <aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut" /> -->
        <!-- <aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/> -->
        <!-- <aop:aspect ref="around">
            <aop:around method="aroundLog" pointcut-ref="allPointcut" />            
        </aop:aspect> -->
        
        <!-- <aop:aspect ref="after">
            <aop:after method="finallyLog" pointcut-ref="allPointcut" />            
        </aop:aspect>  -->
    <!-- </aop:config> -->
    
</beans>